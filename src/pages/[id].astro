---
import Asciify from "../components/Asciify.jsx";

const numberFormat = (num: any) => {
  return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
};

const { searchParams, ...url } = new URL(Astro.request.url);

// const mode = searchParams.get("mode") || "next";
const { id } = Astro.params;

const hash = id && id.startsWith("0x") ? id : "";
const num = !hash ? Number(id) : 0;

const prev = num - 1 < 0 ? 0 : num - 1;
const next = num + 1;

let meta = await fetch(
  "https://api.ethscriptions.com/api/ethscriptions/" + id,
).then((x) => x.json());

if (
  meta.media_type === "image" &&
  meta.image_removed_by_request_of_rights_holder
) {
  meta = await fetch("https://api.wgw.lol/api/ethscriptions/" + id).then((x) =>
    x.json(),
  );
}

const isNotImage =
  meta.media_type !== "image" || meta.mimetype === "image/svg+xml";

// if (!meta.mimetype.startsWith("image/") || meta.mimetype === "image/svg+xml") {
//   const newLoc = mode === "next" ? next : prev;
//   console.log(newLoc);
//   // return Astro.redirect("/?error=not-an-image");
//   return Astro.redirect("/" + newLoc + "?ts=" + Date.now());
// }

const _id = meta.ethscription_number
  ? "#" + numberFormat(meta.ethscription_number)
  : meta.transaction_hash;

meta.title = `Ethscription ${_id} - Asciify.Art`;
meta.url = `https://api.wgw.lol/api/ethscriptions/${isNotImage ? 0 : meta.transaction_hash}/data?noscale=1`;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <!-- HTML Meta Tags -->
    <title>{meta.title}</title>
    <meta name="description" content={meta.title} />

    <!-- Facebook Meta Tags -->
    <meta property="og:url" content={url.href} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Asciify.Art" />
    <meta property="og:description" content={meta.title} />
    <!--
  You can generate this image URL dynamically: https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/{site_text}/{title_text}/{image_url}/og.png
  Replace the variables in the brackets with your own values and use this URL in the image tag below this comment. Ensure values are URL encoded.
  For more information, read: https://www.opengraph.xyz/blog/how-to-implement-dynamic-open-graph-images
-->
    <meta
      property="og:image"
      content={`https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/asciify.art/${encodeURIComponent(meta.title)}/${encodeURIComponent(meta.url)}/og.png`}
    />

    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content={url.origin} />
    <meta property="twitter:url" content={url.href} />
    <meta name="
      twitter:title" content="Asciify.Art" />
    <meta name="twitter:description" content={meta.title} />
    <!--
  You can generate this image URL dynamically: https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/{site_text}/{title_text}/{image_url}/og.png
  Replace the variables in the brackets with your own values and use this URL in the image tag below this comment. Ensure values are URL encoded.
  For more information, read: https://www.opengraph.xyz/blog/how-to-implement-dynamic-open-graph-images
-->
    <meta
      name="twitter:image"
      content={`https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/asciify.art/${encodeURIComponent(meta.title)}/${encodeURIComponent(meta.url)}/og.png`}
    />

    <!-- Meta Tags Generated via https://www.opengraph.xyz -->
    <!-- <meta property="og:site_name" content="Asciify.Art" /><meta
      property="og:type"
      content="website"
    /><meta property="og:url" content="https://asciify.art/" /><meta
      property="og:locale"
      content="en_US"
    /><meta property="og:title" content={`Asciify.Art`} /><meta
      property="og:description"
      content={meta.title}
    /><meta
      property="og:image"
      content={`https://api.wgw.lol/api/ethscriptions/${meta.transaction_hash}/data?noscale=1`}
    /><meta
      property="og:image:secure_url"
      content={`https://api.wgw.lol/api/ethscriptions/${meta.transaction_hash}/data?noscale=1`}
    /><meta property="og:image:type" content="image/jpg" /><meta
      property="og:image:width"
      content="1707"
    /><meta property="og:image:height" content="1233" /><meta
      name="twitter:card"
      content="summary"
    /><meta name="twitter:site" content="@wgw_eth" /><meta
      name="twitter:creator"
      content="@wgw_eth"
    /><meta name="twitter:title" content={`Asciify.Art`} /><meta
      name="twitter:description"
      content={meta.title}
    /><meta
      name="twitter:image"
      content={`https://api.wgw.lol/api/ethscriptions/${meta.transaction_hash}/data?noscale=1`}
    />
    <title>{meta.title}</title> -->
    <style is:global define:vars={{ contentUri: `url("${meta.content_uri}")` }}>
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }
      .asciiart {
        background-clip: text;
        background-position: center center;
        background-repeat: no-repeat;
        background-size: cover;
        -webkit-text-fill-color: transparent;
        text-fill-color: transparent;
        word-break: break-all;
        color: #fff;
        font-family: monospace;
        font-size: 10px;
        text-align: justify;
      }

      .art {
        width: 800px;
        height: 800px;
        background-image: var(--contentUri);
      }

      /* .asciiart::selection {
        background: transparent;
        color: transparent;
      } */
    </style>
  </head>
  <body
    class="mx-auto flex max-w-3xl flex-col items-center justify-center bg-black text-black"
  >
    <!-- <div class="flex w-full items-center justify-between">
      <a href={`/${prev}?mode=prev`} class="bg-gray-200 p-2">
        &LeftArrow; {prev}
      </a>
      <a href={`/${next}?mode=next`} class="bg-gray-200 p-2">
        {next} &RightArrow;
      </a>
    </div> -->
    <Asciify meta={meta} prev={prev} next={next} client:load />
  </body>
</html>
